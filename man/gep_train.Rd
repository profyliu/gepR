% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gepR.R
\name{gep_train}
\alias{gep_train}
\title{Train a GEP model}
\usage{
gep_train(y, x, px1 = 0.4, px2 = 0.1, pm = 0.3, maxiter = 1000,
  headlen = 5, popsize = 100, eliterate = 0.1, goal = 0.95,
  rseed = 8888, nthreads = 4, verbose = 1, fit_method = 0,
  maxpass = 3, sol_file = "gep_sol.dat")
}
\arguments{
\item{y}{numeric vector containing the response variable}

\item{x}{numeric dataframe containing the independent variables}

\item{px1}{one-point crossover rate, between 0 and 1}

\item{px2}{two-point crossover rate, between 0 and 1}

\item{pm}{mutation rate, between 0 and 1}

\item{maxiter}{maximum number of iteration (generations) per round}

\item{headlen}{head length of a gene}

\item{popsize}{population size (number of individuals per generation), default 100. This is where the OpenMP "parallel for" takes effect. So it is preferred to be an integer multiple of nthreads.}

\item{eliterate}{elite rate, the proportion in the population to survive to the next generation, between 0 and 1}

\item{goal}{the targeted R-square value, between 0 and 1, default 0.95. The program stops when R-square achieves this value.}

\item{rseed}{random seed to be used in the C program, integer value}

\item{nthreads}{number of parallel threads to be used in computation, ideally set to equal to the number of cores available}

\item{verbose}{verbose leve, 0 to 2, 0 terse, 2 verbose}

\item{fit_method}{0: regression, 1: classification, default 0. Only 0 is implemented in this version.}

\item{sol_file}{character string of the path and name of the file where the GEP model is to be saved.}
}
\value{
sol_file
}
\description{
Fit a composite linear-nonlinear regression model using Gene Expression Programming. The gepR.dll must be present in the work directory and loaded using the \link{gep_load_dll} function.
}
\examples{
gep_load_dll()
gepmod <- gep_train(elecdemand[,1], elecdemand[,2:4], nthreads=20)
predval <- gep_score(elecdemand[,2:4], gepmod)
gep_unload_dll()

}
